['log','debug','info','warn','error'].forEach(function(consoleKey){console[consoleKey]=function(oriFn){return function(){if(oriFn){oriFn.apply(console,arguments)}var jsType=function(){var type={};var typeArr=['String','Object','Number','Array','Undefined','Function','AsyncFunction','Null','Symbol','Boolean','Arguments','Error','Window'];for(var i=0;i<typeArr.length;i++){(function(name){type['is'+name]=function(obj){return Object.prototype.toString.call(obj)=='[object '+name+']'}})(typeArr[i])}return type}();try{var params=arguments;if(!jsType.isArguments(params)){return}var parseArg=function(arg){if(jsType.isString(arg)||jsType.isNumber(arg)||jsType.isUndefined(arg)||jsType.isNull(arg)||jsType.isBoolean(arg)){return arg}if(jsType.isError(arg)){var res={};['message','sourceURL','line','column','stack'].forEach(function(errKey){res[errKey]=arg[errKey]});return res}if(jsType.isArray(arg)){var newArg=[];try{newArg=JSON.parse(JSON.stringify(arg))}catch(error){}var res=[];for(var i=0;i<newArg.length;i++){res.push(parseArg(newArg[i]))}return res}if(jsType.isArguments(arg)){var res=[];for(var i=0;i<arg.length;i++){res.push(parseArg(arg[i]))}return res}if(jsType.isObject(arg)){var newArg={};try{newArg=JSON.parse(JSON.stringify(arg))}catch(error){}var res={};Object.keys(newArg).forEach(function(argKey){res[argKey]=parseArg(newArg[argKey])});return res}if(jsType.isSymbol(arg)||jsType.isWindow(arg)||jsType.isFunction(arg)||jsType.isAsyncFunction(arg)){return undefined}return undefined};var parseRes=[];for(var i=0;i<params.length;i++){parseRes.push(parseArg(params[i]))}%@.sendNative(consoleKey,JSON.parse(JSON.stringify(parseRes)))}catch(error){}}}(console[consoleKey])});