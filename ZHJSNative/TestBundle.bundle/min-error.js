const FNJSToNativeErrorHandlerName='ZHJSErrorEventHandler';window.onerror=(oriFunc=>{return function(...args){if(oriFunc)oriFunc.apply(window,args);const params=arguments;const type=Object.prototype.toString.call(params);const argCount=params.length;if(type!='[object Arguments]')return;if(argCount==0)return;const invaildDesc='无此参数';const fetchVaule=idx=>{return argCount>idx?params[idx]:invaildDesc};const iosRes={msg:fetchVaule(0),url:fetchVaule(1),line:fetchVaule(2),column:fetchVaule(3),stack:fetchVaule(4)};const res=JSON.parse(JSON.stringify(iosRes));try{const handler=window.webkit.messageHandlers[FNJSToNativeErrorHandlerName];handler.postMessage(res)}catch(error){}}})(window.onerror);