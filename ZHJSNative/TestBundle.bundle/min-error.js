const FNJSToNativeErrorHandlerName='ZHJSErrorEventHandler';window.onerror=(oriFunc=>{return function(...args){if(oriFunc)oriFunc.apply(window,args);const params=arguments;const type=Object.prototype.toString.call(params);const argCount=params.length;if(type!='[object Arguments]')return;if(argCount==0)return;const fetchVaule=idx=>{return argCount>idx?params[idx]:'无此参数'};const firstParma=fetchVaule(0);const isErrorParam=Object.prototype.toString.call(firstParma)=='[object Error]';const iosRes={message:isErrorParam?firstParma.message:fetchVaule(0),sourceURL:isErrorParam?firstParma.sourceURL:fetchVaule(1),line:isErrorParam?firstParma.line:fetchVaule(2),column:isErrorParam?firstParma.column:fetchVaule(3),stack:isErrorParam?firstParma.stack.toString():fetchVaule(4)};const res=JSON.parse(JSON.stringify(iosRes));try{const handler=window.webkit.messageHandlers[FNJSToNativeErrorHandlerName];handler.postMessage(res)}catch(error){}}})(window.onerror);