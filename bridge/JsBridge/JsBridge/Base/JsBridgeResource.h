#import <Foundation/Foundation.h>
static NSString * const JsBridge_resource_event = @"var My_JsBridge_Key_WebHandler='%@';var My_JsBridge_Key_jsToNativeMethodSync='%@';var My_JsBridge_Key_jsToNativeMethodAsync='%@';var My_JsBridge_Key_callSuccess='%@';var My_JsBridge_Key_callFail='%@';var My_JsBridge_Key_callComplete='%@';var My_JsBridge_Key_callJsFunctionArg='%@';var My_JsBridge_Type=function(){var type={};var typeArr=['String','Object','Number','Array','Undefined','Function','Null','Symbol','Boolean'];for(var i=0;i<typeArr.length;i++){(function(name){type['is'+name]=function(obj){return Object.prototype.toString.call(obj)=='[object '+name+']'}})(typeArr[i])}return type}();var My_JsBridge_callMap={};var %@=function(params){var funcRes=null;if(!My_JsBridge_Type.isString(params)||!params){return funcRes}var newParams=JSON.parse(decodeURIComponent(params));if(!My_JsBridge_Type.isObject(newParams)){return funcRes}var funcId=newParams.funcId;var resDatas=My_JsBridge_Type.isArray(newParams.data)?newParams.data:[];var alive=newParams.alive;var randomKey='',funcNameKey='';var matchKey=function(key){var matchNumber=funcId.length-key.length;if(matchNumber>=0&&funcId.lastIndexOf(key)==matchNumber){}else{return false}randomKey=funcId.replace(new RegExp(key,'g'),'');funcNameKey=key;return true};var matchRes=matchKey(My_JsBridge_Key_callSuccess)||matchKey(My_JsBridge_Key_callFail)||matchKey(My_JsBridge_Key_callComplete)||matchKey(My_JsBridge_Key_callJsFunctionArg);if(!matchRes)return funcRes;var funcMap=My_JsBridge_callMap[randomKey];if(!My_JsBridge_Type.isObject(funcMap))return funcRes;var func=funcMap[funcNameKey];if(!My_JsBridge_Type.isFunction(func))return funcRes;try{funcRes=func(...resDatas)}catch(error){if(My_JsBridge_Type.isFunction(window.onerror)&&Object.prototype.toString.call(error)=='[object Error]'){window.onerror.apply(window,[error])}funcRes=null}if(alive)return funcRes;if(funcNameKey==My_JsBridge_Key_callComplete||funcNameKey==My_JsBridge_Key_callJsFunctionArg){My_JsBridge_callMap_remove(randomKey)}return funcRes};var My_JsBridge_callMap_add=function(randomKey,funcNameKey,func){var funcMap=My_JsBridge_callMap[randomKey];if(!My_JsBridge_Type.isObject(funcMap)){var map={};map[funcNameKey]=func;My_JsBridge_callMap[randomKey]=map}else{funcMap[funcNameKey]=func;My_JsBridge_callMap[randomKey]=funcMap}return randomKey+funcNameKey};var My_JsBridge_callMap_remove=function(randomKey){if(!My_JsBridge_callMap.hasOwnProperty(randomKey))return;delete My_JsBridge_callMap[randomKey]};var My_JsBridge_makeParams=function(apiPrefix,moduleName,methodName,params,index){if(!My_JsBridge_Type.isObject(params)&&!My_JsBridge_Type.isFunction(params)){return params}var randomKey='-'+apiPrefix+'-'+(My_JsBridge_Type.isUndefined(moduleName)?'Undefined':moduleName)+'-'+methodName+'-'+(new Date).getTime().toString()+'-arg'+index+'-'+Math.floor(Math.random()*1e4).toString()+'-'+Math.floor(Math.random()*1e4).toString()+'-';var newParams={};var funcId='';if(My_JsBridge_Type.isFunction(params)){funcId=My_JsBridge_callMap_add(randomKey,My_JsBridge_Key_callJsFunctionArg,params);newParams[My_JsBridge_Key_callJsFunctionArg]=funcId;return newParams}newParams=params;var success=params.success;if(success&&My_JsBridge_Type.isFunction(success)){funcId=My_JsBridge_callMap_add(randomKey,My_JsBridge_Key_callSuccess,success);newParams[My_JsBridge_Key_callSuccess]=funcId}var fail=params.fail;if(fail&&My_JsBridge_Type.isFunction(fail)){funcId=My_JsBridge_callMap_add(randomKey,My_JsBridge_Key_callFail,fail);newParams[My_JsBridge_Key_callFail]=funcId}var complete=params.complete;if(complete&&My_JsBridge_Type.isFunction(complete)){funcId=My_JsBridge_callMap_add(randomKey,My_JsBridge_Key_callComplete,complete);newParams[My_JsBridge_Key_callComplete]=funcId}return newParams};var My_JsBridge_sendParams=function(apiPrefix,moduleName,methodName,methodSync,params){var newParams=params;var resArgs=[];if(Object.prototype.toString.call(newParams)==='[object Arguments]'){var argCount=newParams.length;for(var argIdx=0;argIdx<argCount;argIdx++){resArgs.push(My_JsBridge_makeParams(apiPrefix,moduleName,methodName,newParams[argIdx],argIdx))}}return{apiPrefix:apiPrefix,moduleName:moduleName,methodName:methodName,methodSync:methodSync,args:resArgs}};var My_JsBridge_sendNativeAsync=function(params){var handler=window.webkit.messageHandlers[My_JsBridge_Key_WebHandler];handler.postMessage(JSON.parse(JSON.stringify(params)))};var My_JsBridge_sendNativeSync=function(params){var res=prompt(JSON.stringify(params));if(My_JsBridge_Type.isNull(res)){return undefined}if(My_JsBridge_Type.isString(res)&&res.length==0){return null}if(!res)return null;try{res=JSON.parse(res);return res.data}catch(error){if(My_JsBridge_Type.isFunction(window.onerror)&&Object.prototype.toString.call(error)=='[object Error]'){window.onerror.apply(window,[error])}}return null};var %@=function(apiPrefix,moduleName,apiMap){if(!apiPrefix||!My_JsBridge_Type.isString(apiPrefix)||!My_JsBridge_Type.isObject(apiMap)){return{}}var res={};var mapKeys=Object.keys(apiMap);for(var i=0;i<mapKeys.length;i++){(function(methodName){var config=apiMap[methodName];var isSync=config.hasOwnProperty('sync')?config.sync:false;res[methodName]=isSync?function(){return My_JsBridge_sendNativeSync(My_JsBridge_sendParams(apiPrefix,moduleName,methodName,My_JsBridge_Key_jsToNativeMethodSync,arguments))}:function(){My_JsBridge_sendNativeAsync(My_JsBridge_sendParams(apiPrefix,moduleName,methodName,My_JsBridge_Key_jsToNativeMethodAsync,arguments))}})(mapKeys[i])}return res};var %@=function(apiPrefix,desApi,moduleApiMap){if(!apiPrefix||!My_JsBridge_Type.isString(apiPrefix)||!desApi||!My_JsBridge_Type.isObject(desApi)||!moduleApiMap||!My_JsBridge_Type.isObject(moduleApiMap)){return desApi}var resModuleMap={};var mapKeys=Object.keys(moduleApiMap);for(var i=0;i<mapKeys.length;i++){(function(moduleName){resModuleMap[moduleName]=%@(apiPrefix,moduleName,moduleApiMap[moduleName])})(mapKeys[i])}var modulesKey='registerModules';var requireModuleKey='requireModule';desApi[modulesKey]=function(){return resModuleMap};desApi[requireModuleKey]=function(moduleName){if(!moduleName||!My_JsBridge_Type.isString(moduleName)){return undefined}return resModuleMap[moduleName]};mapKeys=Object.keys(resModuleMap);for(var j=0;j<mapKeys.length;j++){(function(moduleName){desApi[moduleName]=function(){var moduleFunc=desApi[requireModuleKey];if(!moduleFunc){return moduleFunc}if(!My_JsBridge_Type.isFunction(moduleFunc)){return undefined}return moduleFunc(moduleName)}})(mapKeys[j])}return desApi};";
static NSString * const JsBridge_resource_console = @"console.log=function(oriLogFunc){return function(){oriLogFunc.apply(console,arguments);try{var errorRes=[];var parseData=function(data){var res=null;var type=Object.prototype.toString.call(data);if(type=='[object Null]'||type=='[object String]'||type=='[object Number]'){res=data}else if(type=='[object Function]'){res=data.toString()}else if(type=='[object Undefined]'){res='Undefined'}else if(type=='[object Boolean]'){res=data?'true':'false'}else if(type=='[object Object]'){res={};var mapKeys=Object.keys(data);for(var i=0;i<mapKeys.length;i++){(function(key){res[key]=parseData(data[key])})(mapKeys[i])}}else if(type=='[object Array]'){res=[];data.forEach(function(el){res.push(parseData(el))})}else if(type=='[object Error]'){res=data;errorRes.push(res)}else if(type=='[object Window]'){res=data.toString()}else{res=data}return res};var params=arguments;if(Object.prototype.toString.call(params)!='[object Arguments]')return;var argCount=params.length;var iosRes=[];var fetchVaule=function(aIdx){return argCount>aIdx?params[aIdx]:'no this params at index: '+aIdx};if(argCount==0)return;if(argCount==1){iosRes=parseData(fetchVaule(0))}else{for(var idx=0;idx<argCount;idx++){iosRes.push(parseData(fetchVaule(idx)))}}%@.sendNative('log',JSON.parse(JSON.stringify(iosRes)))}catch(error){}return;if(errorRes.length==0)return;if(!window.onerror)return;try{errorRes.forEach(function(el){window.onerror(el)})}catch(error){}}}(console.log);";
static NSString * const JsBridge_resource_error = @"window.onerror=function(oriFunc){return function(){try{if(oriFunc)oriFunc.apply(window,arguments);var params=arguments;if(Object.prototype.toString.call(params)!='[object Arguments]')return;var argCount=params.length;if(argCount==0)return;var fetchValue=function(idx){return argCount>idx?params[idx]:'no this params at index: '+idx};var firstParma=fetchValue(0);var isError=Object.prototype.toString.call(firstParma)=='[object Error]';var fetchErrorValue=function(params,key){return params.hasOwnProperty(key)?params[key]:'no this key: '+key};var resErr=JSON.parse(JSON.stringify({message:isError?fetchErrorValue(firstParma,'message'):fetchValue(0),sourceURL:isError?fetchErrorValue(firstParma,'sourceURL'):fetchValue(1),line:isError?fetchErrorValue(firstParma,'line'):fetchValue(2),column:isError?fetchErrorValue(firstParma,'column'):fetchValue(3),stack:isError?fetchErrorValue(firstParma,'stack').toString():fetchValue(4)}));%@.sendNative(resErr)}catch(error){}}}(window.onerror);";
static NSString * const JsBridge_resource_socket = @"window.My_JsBridge_OriginSocket=WebSocket;window.WebSocket=function(url,protocols){var ws=new My_JsBridge_OriginSocket(url,protocols);setTimeout(function(){ws.addEventListener('message',function(event){var data=event.data;var formatData=[];if(data.length<=1){formatData=data}else{data=JSON.parse(data.substring(1));if(Object.prototype.toString.call(data)=='[object Array]'&&data.length>0){data=JSON.parse(data[0]);formatData.push(data);%@.socketDidReceiveMessage(data)}else{formatData=data}}})},1e3);return ws};";
